{"version":3,"file":"static/js/434.f9a55da1.chunk.js","mappings":"qNAkDA,EA9CwB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACvB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,OACI,gBAAKC,UAAU,iBAAf,UACI,qBAASA,UAAU,YAAnB,WACI,wBAAG,6BAAKJ,EAAKK,YACb,uBAAIL,EAAKM,OAAOC,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAC3B,0BAAoBD,EAAKE,SAAS,iBAAmB,uBAAIF,EAAO,MAAWA,GAAQT,EAAKM,OAAOC,MAAM,KAAKK,SAAWF,EAAQ,EAAI,GAAK,MAA3HA,SAEf,uBAAIV,EAAKa,cACT,uBACKC,OAAOC,QAAQf,EAAKgB,MAAMR,KAAI,WAAeE,GAAf,mBAAEO,EAAF,KAAOC,EAAP,YAC3B,UAAC,WAAD,YACI,cAAGC,KAAMD,EAAT,oBAAqBD,EAArB,OACCP,IAAUI,OAAOM,KAAKpB,GAAMY,OAAS,GAAK,aAF1BK,SAM7B,uBAAIjB,EAAKqB,QAET,cAAGjB,UAAU,QAAb,UACI,gBAAKkB,YAAa,kBAAMnB,GAAQ,IAAOoB,WAAY,kBAAMpB,GAAQ,IAAjE,UACI,gBAAKqB,IAAG,UAAKC,IAAL,OAA8BvB,EAAOF,EAAK0B,OAAS1B,EAAK2B,QAAUC,IAAK5B,EAAKK,aAG5F,gBAAKD,UAAU,cAAf,UACI,uBAAIJ,EAAK6B,mBCU7B,EAxCa,CACX,CACExB,MAAO,sDACPC,OAAQ,yGACRoB,OAAQ,gCACRC,OAAQ,gCACRd,WAAY,wDACZG,KAAM,CACF,OAAU,mCACV,MAAS,oCACba,SAAU,6gDACVR,KAAK,WAEP,CACEhB,MAAO,mEACPC,OAAQ,iFACRoB,OAAQ,mCACRC,OAAQ,mCACRd,WAAY,0BACZG,KAAM,CACF,cAAe,IACnBa,SAAU,cACVR,KAAK,WAEP,CACEhB,MAAO,kJACPC,OAAQ,kDACRoB,OAAQ,+BACRC,OAAQ,+BACRd,WAAY,kHACZQ,KAAK,UACLL,KAAM,CACJ,MACU,kEAEZa,SAAU,8zCCRd,EAnBoB,kBAChB,SAACC,EAAA,EAAD,CAAMzB,MAAM,cAAZ,UACI,qBAASD,UAAU,OAAO2B,GAAG,WAA7B,WACI,6BACI,iBAAK3B,UAAU,QAAf,WACI,eAAI,cAAY,UAAhB,UAA0B,SAAC,KAAD,CAAM4B,GAAG,eAAT,4BAC1B,qDAGPhC,EAAAA,KAAS,SAACiC,GAAD,OACN,SAAC,EAAD,CACIjC,KAAMiC,GACDA,EAAY5B","sources":["components/Publication/PublicationCell.js","data/publication.js","pages/Publication.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst PublicationCell = ({ data }) => {\r\n    const [over, setOver] = useState(false);\r\n    return (\r\n        <div className=\"cell-container\">\r\n            <article className=\"mini-post\">\r\n                <p><b> {data.title}</b></p>\r\n                <p>{data.author.split(\",\").map((item, index) => (\r\n                    <span key={index}>{(item.includes('Jinghao Wang')) ? <b>{item + ','}</b> : item + (data.author.split(\",\").length === index + 1 ? '' : ',')}</span>\r\n                ))}</p>\r\n                <p>{data.conference}</p>\r\n                <p>\r\n                    {Object.entries(data.link).map(([key, value], index) => (\r\n                        <React.Fragment key={key}>\r\n                            <a href={value}>{`[${key}]`}</a>\r\n                            {index !== Object.keys(data).length - 1 && '\\u00A0\\u00A0'}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </p>\r\n                <p>{data.time}</p>\r\n\r\n                <a className=\"image\">\r\n                    <div onMouseOver={() => setOver(true)} onMouseOut={() => setOver(false)}>\r\n                        <img src={`${process.env.PUBLIC_URL}${over ? data.image1 : data.image2}`} alt={data.title} />\r\n                    </div>\r\n                </a>\r\n                <div className=\"description\">\r\n                    <p>{data.abstract}</p>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    );\r\n}\r\n\r\nPublicationCell.propTypes = {\r\n    data: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        link: PropTypes.string.isRequired,\r\n        time: PropTypes.string.isRequired,\r\n        author: PropTypes.string.isRequired,\r\n        conference: PropTypes.string.isRequired,\r\n        abstract: PropTypes.string.isRequired,\r\n        image1: PropTypes.string.isRequired,\r\n        image2: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nexport default PublicationCell;\r\n","const data = [\r\n  {\r\n    title: 'MIMIC-IT: Multi-Modal In-Context Instruction Tuning',\r\n    author: 'Bo Li*, Yuanhan Zhang*, Liangyu Chen*, Jinghao Wang*, Fanyi Pu*, Jingkang Yang, Chunyuan Li, Ziwei Liu',\r\n    image1: '/images/projects/mimic-it.jpg',\r\n    image2: '/images/projects/mimic-it.jpg',\r\n    conference: 'NIPS Datasets and Benchmarks track 2023, under review',\r\n    link: {\r\n        'github': 'https://github.com/Luodian/Otter',\r\n        'paper': 'https://arxiv.org/abs/2306.05425'},\r\n    abstract: 'High-quality instructions and responses are essential for the zero-shot performance of large language models on interactive natural language tasks. For interactive vision-language tasks involving intricate visual scenes, a large quantity of diverse and creative instruction-response pairs should be imperative to tune vision-language models (VLMs). Nevertheless, the current availability of vision-language instruction-response pairs in terms of quantity, diversity, and creativity remains limited, posing challenges to the generalization of interactive VLMs. Here we present MultI-Modal In-Context Instruction Tuning (MIMIC-IT), a dataset comprising 2.8 million multimodal instruction-response pairs, with 2.2 million unique instructions derived from images and videos. Each pair is accompanied by multi-modal in-context information, forming conversational contexts aimed at empowering VLMs in perception, reasoning, and planning. The instruction-response collection process, dubbed as Syphus, is scaled using an automatic annotation pipeline that combines human expertise with GPT\\'s capabilities. Using the MIMIC-IT dataset, we train a large VLM named Otter. Based on extensive evaluations conducted on vision-language benchmarks, it has been observed that Otter demonstrates remarkable proficiency in multi-modal perception, reasoning, and in-context learning. Human evaluation reveals it effectively aligns with the user\\'s intentions. We release the MIMIC-IT dataset, instruction-response collection pipeline, benchmarks, and the Otter model.',\r\n    time:'2023-06'\r\n  },\r\n  {\r\n    title: 'Pair then Relation: Pair-Net for Panoptic Scene Graph Generation',\r\n    author: 'Jinghao Wang*, Zhengyu Wen*, Xiangtai Li, Jingkang Yang, Zujing Guo, Ziwei Liu',\r\n    image1: '/images/projects/coming_soon.png',\r\n    image2: '/images/projects/coming_soon.png',\r\n    conference: 'ICCV 2023, under review',\r\n    link: {\r\n        'coming soon': ''},\r\n    abstract: 'coming soon',\r\n    time:'2023-03'\r\n  },\r\n  {\r\n    title: 'TransPatch: A Transformer-based Generator for Accelerating Transferable Patch Generation in Adversarial Attacks Against Object Detection Models',\r\n    author: 'Jinghao Wang, Chenling Cui, Xuejun Wen, Jie Shi',\r\n    image1: '/images/projects/attack1.jpg',\r\n    image2: '/images/projects/attack2.jpg',\r\n    conference: 'European Conference on Computer Vision (ECCV) Workshop on Adversarial Robustness in the Real World (AROW), 2022',\r\n    time:'2022-08',\r\n    link: {\r\n      'paper':\r\n                'https://link.springer.com/chapter/10.1007/978-3-031-25056-9_21'\r\n    },\r\n    abstract: 'Abstract: Patch-based adversarial attack shows the possibility to black-box physical attacks on state-of-the-art object detection models through hiding the occurrence of the objects, which causes a high risk in automated security system relying on such model. However, most prior works mainly focus on the attack performance but rarely pay attention to the training speed due to pixel updating and non-smoothing loss function in the training process. To overcome this limitation, we propose a simple but novel training pipeline called TransPatch, a transformer-based generator with new loss function, to accelerate the training process. To address the issue of unstable training problem of previous methods, we also compare and visualize the landscape of various loss functions. We conduct comprehensive experiments on two pedestrian and one stop sign datasets on three object detection models, i.e., YOLOv4, DETR and SSD to compare the training speed and patch performance in such adversarial attacks. From our experiments, our method outperforms previous methods within the first few epochs, and achieves absolute 20% ~ 30% improvements in attack success rate (ASR) using 10% of the training time. We hope our approach can motivate future research on using generator in physical adversarial attack generation on other tasks and models.',\r\n  }\r\n  ,\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport PublicationCell from '../components/Publication/PublicationCell';\r\nimport data from '../data/publication';\r\n\r\nconst Publication = () => (\r\n    <Main title=\"Publication\">\r\n        <article className=\"post\" id=\"projects\">\r\n            <header>\r\n                <div className=\"title\">\r\n                    <h2 data-testid=\"heading\"><Link to=\"/publication\">Publication</Link></h2>\r\n                    <p>List of publications</p>\r\n                </div>\r\n            </header>\r\n            {data.map((publication) => (\r\n                <PublicationCell\r\n                    data={publication}\r\n                    key={publication.title}\r\n                />\r\n            ))}\r\n        </article>\r\n    </Main>\r\n);\r\n\r\nexport default Publication;\r\n"],"names":["data","useState","over","setOver","className","title","author","split","map","item","index","includes","length","conference","Object","entries","link","key","value","href","keys","time","onMouseOver","onMouseOut","src","process","image1","image2","alt","abstract","Main","id","to","publication"],"sourceRoot":""}